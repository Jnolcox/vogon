<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd">
	<context:component-scan base-package="org.zlogic.vogon.web,org.zlogic.vogon.web.controller,org.zlogic.vogon.web.data" />
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="org.zlogic.vogon.web.controller.serialization.JSONMapper" />
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<mvc:default-servlet-handler/>
	<!-- JPA configuration -->
	<jpa:repositories base-package="org.zlogic.vogon.web.data" />
	<bean id="databasePath" class="java.lang.String">
		<constructor-arg value="#{ systemProperties['jboss.server.data.dir'] ?: (systemProperties['catalina.home'] ?: systemProperties['user.dir']) }" />
	</bean>
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="VogonPU"/>
		<property name="jpaPropertyMap">
			<map>
				<entry key="javax.persistence.jdbc.url" value="#{'jdbc:h2:'+databasePath+'/Vogon'}" />
			</map>
		</property>
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"/>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" >
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Authentication -->
	<security:http pattern="/oauth/token" create-session="stateless" entry-point-ref="oauthAuthenticationEntryPoint" authentication-manager-ref="authenticationManager">
		<security:intercept-url pattern="/oauth/token" access="ROLE_USER" />
		<security:anonymous enabled="false" />
		<security:access-denied-handler ref="accessDeniedHandler" />
		<security:custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />
	</security:http>
	<security:http  pattern="/service/**" create-session="never" entry-point-ref="oauthAuthenticationEntryPoint" authentication-manager-ref="authenticationManager">
		<security:intercept-url pattern="/service/**" access="ROLE_USER" />
		<security:access-denied-handler ref="accessDeniedHandler"/>
		<security:anonymous enabled="false"/>
		<security:custom-filter ref="resourceServerFilter" after="PRE_AUTH_FILTER" />
	</security:http>
	<bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />
	<bean id="accessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>
	<bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:user-service>
				<security:user name="leonard" password="nimoy" authorities="ROLE_USER" />
			</security:user-service>
		</security:authentication-provider>
		<security:authentication-provider user-service-ref="clientDetailsUserService"/>
	</security:authentication-manager>
	<oauth:client-details-service id="clientDetails">
		<oauth:client client-id="vogonweb" authorized-grant-types="password,authorization_code,refresh_token,implicit" authorities="ROLE_USER" scope="read,write,trust" access-token-validity="600"/>
	</oauth:client-details-service>
	<bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetails" />
	</bean>
	<oauth:resource-server id="resourceServerFilter" resource-id="springsec" token-services-ref="tokenServices" />
	<bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="clientDetailsService" ref="clientDetails"/>
		<property name="tokenStore">
			<bean class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />
		</property>
		<property name="supportRefreshToken" value="true" />
	</bean>
	<oauth:authorization-server client-details-service-ref="clientDetails" token-endpoint-url="/oauth/token" token-services-ref="tokenServices">
		<oauth:authorization-code />
		<oauth:implicit />
		<oauth:refresh-token />
		<oauth:client-credentials />
		<oauth:password />
	</oauth:authorization-server>
</beans>
