/*
 * Vogon personal finance/expense analyzer.
 * License TBD.
 * Author: Dmitry Zolotukhin <zlogic@gmail.com>
 */
package org.zlogic.vogon.ui;

import java.io.File;
import java.text.MessageFormat;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.zlogic.vogon.data.CsvImporter;
import org.zlogic.vogon.data.DatabaseManager;
import org.zlogic.vogon.data.FileImporter;
import org.zlogic.vogon.data.FinanceData;
import org.zlogic.vogon.data.FinanceTransaction;
import org.zlogic.vogon.data.VogonImportLogicalException;
import org.zlogic.vogon.data.XmlImporter;

/**
 *
 * @author Zlogic
 */
public class MainWindow extends javax.swing.JFrame implements FinanceData.TransactionCreatedEventListener {

	private static final ResourceBundle messages = ResourceBundle.getBundle("org/zlogic/vogon/ui/messages");

	/**
	 * Creates new form MainWindow
	 */
	public MainWindow() {
		initComponents();
		initCustomComponents();
	}

	private void initCustomComponents() {
		//Restore settings
		lastDirectory = preferenceStorage.get("lastDirectory", null) == null ? null : new java.io.File(preferenceStorage.get("lastDirectory", null)); //NOI18N

		//Load data from DB
		((TransactionsTableModel) jTableTransactions.getModel()).setFinanceData(financeData);
		((AccountsTableModel) jTableAccounts.getModel()).setFinanceData(financeData);
		transactionEditor.setFinanceData(financeData);
		transactionEditor.updateAccountsCombo();
		financeData.addTransactionCreatedListener((TransactionsTableModel) jTableTransactions.getModel());
		financeData.addTransactionUpdatedListener((TransactionsTableModel) jTableTransactions.getModel());
		financeData.addTransactionCreatedListener(this);

		jTableTransactions.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
			@Override
			public void valueChanged(ListSelectionEvent e) {
				if (jTableTransactions.getSelectedRow() >= 0)
					transactionEditor.editTransaction(financeData.getTransactions().get(jTableTransactions.getSelectedRow()));
				else
					transactionEditor.editTransaction(null);
			}
		});


	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelTransactions = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        transactionEditor = new org.zlogic.vogon.ui.TransactionEditor();
        jPanelTransactionsList = new javax.swing.JPanel();
        jPanelTransactionControls = new javax.swing.JPanel();
        jButtonDeleteTransaction = new javax.swing.JButton();
        jScrollPaneTransactions = new javax.swing.JScrollPane();
        jTableTransactions = new javax.swing.JTable();
        jPanelAccounts = new javax.swing.JPanel();
        jPanelAccountsControls = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPaneAccounts = new javax.swing.JScrollPane();
        jTableAccounts = new javax.swing.JTable();
        jPanelCurrencies = new javax.swing.JPanel();
        jPanelCurrenciesControls = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPaneCurrencies = new javax.swing.JScrollPane();
        jTableCurrencies = new javax.swing.JTable();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemImport = new javax.swing.JMenuItem();
        jMenuItemExport = new javax.swing.JMenuItem();
        jMenuTools = new javax.swing.JMenu();
        jMenuItemRecalculateBalance = new javax.swing.JMenuItem();
        jMenuItemCleanupDB = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/zlogic/vogon/ui/messages"); // NOI18N
        setTitle(bundle.getString("MAINWINDOW_TITLE")); // NOI18N
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(800, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanelTransactions.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(300);
        jSplitPane1.setTopComponent(transactionEditor);

        jPanelTransactionsList.setLayout(new java.awt.BorderLayout());

        jPanelTransactionControls.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jButtonDeleteTransaction.setText("Delete");
        jButtonDeleteTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteTransactionActionPerformed(evt);
            }
        });
        jPanelTransactionControls.add(jButtonDeleteTransaction);

        jPanelTransactionsList.add(jPanelTransactionControls, java.awt.BorderLayout.NORTH);

        jTableTransactions.setAutoCreateRowSorter(true);
        jTableTransactions.setModel(new TransactionsTableModel());
        jTableTransactions.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneTransactions.setViewportView(jTableTransactions);

        jPanelTransactionsList.add(jScrollPaneTransactions, java.awt.BorderLayout.CENTER);

        jSplitPane1.setBottomComponent(jPanelTransactionsList);

        jPanelTransactions.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab(messages.getString("TRANSACTIONS"), jPanelTransactions); // NOI18N

        jPanelAccounts.setLayout(new java.awt.BorderLayout());

        jPanelAccountsControls.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jButton5.setText("Add account");
        jPanelAccountsControls.add(jButton5);

        jButton6.setText("Delete account");
        jPanelAccountsControls.add(jButton6);

        jPanelAccounts.add(jPanelAccountsControls, java.awt.BorderLayout.NORTH);

        jTableAccounts.setModel(new org.zlogic.vogon.ui.AccountsTableModel());
        jTableAccounts.setFillsViewportHeight(true);
        jScrollPaneAccounts.setViewportView(jTableAccounts);

        jPanelAccounts.add(jScrollPaneAccounts, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab(messages.getString("ACCOUNTS"), jPanelAccounts); // NOI18N

        jPanelCurrencies.setLayout(new java.awt.BorderLayout());

        jPanelCurrenciesControls.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("Default currency");
        jPanelCurrenciesControls.add(jLabel1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanelCurrenciesControls.add(jComboBox1);

        jPanelCurrencies.add(jPanelCurrenciesControls, java.awt.BorderLayout.NORTH);

        jTableCurrencies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Source currency", "Destination currency", "Exchange rate"
            }
        ));
        jScrollPaneCurrencies.setViewportView(jTableCurrencies);

        jPanelCurrencies.add(jScrollPaneCurrencies, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Currencies", jPanelCurrencies);

        getContentPane().add(jTabbedPane1);

        jMenuFile.setText(messages.getString("MAINWINDOW_MENU_FILE")); // NOI18N

        jMenuItemImport.setText(messages.getString("MAINWINDOW_MENU_SETTINGS")); // NOI18N
        jMenuItemImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemImportActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemImport);

        jMenuItemExport.setText(messages.getString("EXPORT")); // NOI18N
        jMenuFile.add(jMenuItemExport);

        jMenuBar.add(jMenuFile);

        jMenuTools.setText(messages.getString("TOOLS")); // NOI18N

        jMenuItemRecalculateBalance.setText(messages.getString("RECALCULATE_BALANCE")); // NOI18N
        jMenuTools.add(jMenuItemRecalculateBalance);

        jMenuItemCleanupDB.setText(messages.getString("CLEANUP_DB")); // NOI18N
        jMenuTools.add(jMenuItemCleanupDB);

        jMenuBar.add(jMenuTools);

        setJMenuBar(jMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemImportActionPerformed
		// Prepare file chooser dialog
		JFileChooser fileChooser = new JFileChooser((lastDirectory != null && lastDirectory.exists()) ? lastDirectory : null);
		fileChooser.setMultiSelectionEnabled(false);
		fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
		fileChooser.setDialogTitle(messages.getString("CHOOSE_FILES_TO_IMPORT"));
		//Prepare file chooser filter
		fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter(messages.getString("CSV_FILES_(COMMA-SEPARATED)"), "csv")); //NOI18N
		if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
			File selectedFile = fileChooser.getSelectedFile();
			lastDirectory = selectedFile.isDirectory() ? selectedFile : selectedFile.getParentFile();
			preferenceStorage.put("lastDirectory", lastDirectory.toString()); //NOI18N

			//Test code for printing data
			FileImporter importer = new CsvImporter(selectedFile);

			if (fileChooser.getFileFilter().getDescription().equals(messages.getString("CSV_FILES_(COMMA-SEPARATED)")))
				importer = new CsvImporter(selectedFile);
			else if (fileChooser.getFileFilter().getDescription().equals(messages.getString("XML_FILES")))
				importer = new XmlImporter(selectedFile);
			try {
				if (importer == null)
					throw new VogonImportLogicalException(messages.getString("UNKNOWN_FILE_TYPE"));
				financeData.importData(importer);
				((TransactionsTableModel) jTableTransactions.getModel()).setFinanceData(financeData);
				((AccountsTableModel) jTableAccounts.getModel()).setFinanceData(financeData);
			} catch (org.zlogic.vogon.data.VogonImportLogicalException ex) {
				Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
				JOptionPane.showMessageDialog(this, new MessageFormat(messages.getString("IMPORT_EXCEPTION_DIALOG_TEXT")).format(new Object[]{ex.getLocalizedMessage(), org.zlogic.vogon.data.Utils.getStackTrace(ex)}), messages.getString("IMPORT_EXCEPTION_DIALOG_TITLE"), JOptionPane.ERROR_MESSAGE);
			} catch (Exception ex) {
				Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
				JOptionPane.showMessageDialog(this, new MessageFormat(messages.getString("IMPORT_EXCEPTION_DIALOG_TEXT")).format(new Object[]{ex.getLocalizedMessage(), org.zlogic.vogon.data.Utils.getStackTrace(ex)}), messages.getString("IMPORT_EXCEPTION_DIALOG_TITLE"), JOptionPane.ERROR_MESSAGE);
			}
		}
    }//GEN-LAST:event_jMenuItemImportActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
		try {
			transactionEditor.saveChanges();
			DatabaseManager.getInstance().shutdown();
		} catch (Exception ex) {
			Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_formWindowClosing

    private void jButtonDeleteTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteTransactionActionPerformed
		int selectedRow = jTableTransactions.getSelectedRow();
		if (selectedRow >= 0) {
			transactionEditor.editTransaction(null);
			((TransactionsTableModel) jTableTransactions.getModel()).deleteTransaction(selectedRow);
		}
    }//GEN-LAST:event_jButtonDeleteTransactionActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/*
		 * Set the Nimbus look and feel
		 */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) { //NOI18N
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/*
		 * Create and display the form
		 */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				new MainWindow().setVisible(true);
			}
		});
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButtonDeleteTransaction;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemCleanupDB;
    private javax.swing.JMenuItem jMenuItemExport;
    private javax.swing.JMenuItem jMenuItemImport;
    private javax.swing.JMenuItem jMenuItemRecalculateBalance;
    private javax.swing.JMenu jMenuTools;
    private javax.swing.JPanel jPanelAccounts;
    private javax.swing.JPanel jPanelAccountsControls;
    private javax.swing.JPanel jPanelCurrencies;
    private javax.swing.JPanel jPanelCurrenciesControls;
    private javax.swing.JPanel jPanelTransactionControls;
    private javax.swing.JPanel jPanelTransactions;
    private javax.swing.JPanel jPanelTransactionsList;
    private javax.swing.JScrollPane jScrollPaneAccounts;
    private javax.swing.JScrollPane jScrollPaneCurrencies;
    private javax.swing.JScrollPane jScrollPaneTransactions;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableAccounts;
    private javax.swing.JTable jTableCurrencies;
    private javax.swing.JTable jTableTransactions;
    private org.zlogic.vogon.ui.TransactionEditor transactionEditor;
    // End of variables declaration//GEN-END:variables
	/**
	 * Last opened directory
	 */
	private File lastDirectory = null;
	/**
	 * Easy access to preference storage
	 */
	protected java.util.prefs.Preferences preferenceStorage = java.util.prefs.Preferences.userNodeForPackage(MainWindow.class);
	/**
	 * Finance Data instance
	 */
	protected FinanceData financeData = new FinanceData();

	@Override
	public void transactionCreated(FinanceTransaction newTransaction) {
		int newTransactionIndex = financeData.getTransactions().indexOf(newTransaction);
		jTableTransactions.getSelectionModel().setSelectionInterval(newTransactionIndex, newTransactionIndex);
		jTableTransactions.scrollRectToVisible(jTableTransactions.getCellRect(newTransactionIndex, 0, true));
	}
}
